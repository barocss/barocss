import{_ as t,c as a,o as n,a2 as s}from"./chunks/framework.C0Fyqt99.js";const h=JSON.parse('{"title":"outline-width","description":"","frontmatter":{},"headers":[],"relativePath":"guide/borders/outline-width.md","filePath":"guide/borders/outline-width.md"}'),i={name:"guide/borders/outline-width.md"};function o(l,e,p,d,u,r){return n(),a("div",null,[...e[0]||(e[0]=[s(`<h1 id="outline-width" tabindex="-1">outline-width <a class="header-anchor" href="#outline-width" aria-label="Permalink to &quot;outline-width&quot;">​</a></h1><p>Utilities for controlling the width of an element&#39;s outline.</p><h2 id="quick-reference" tabindex="-1">Quick reference <a class="header-anchor" href="#quick-reference" aria-label="Permalink to &quot;Quick reference&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Class</th><th>Styles</th></tr></thead><tbody><tr><td><code>outline</code></td><td><code>outline-width: 1px;</code></td></tr><tr><td><code>outline-&amp;lt;number&amp;gt;</code></td><td><code>outline-width: &amp;lt;number&amp;gt;px;</code></td></tr><tr><td><code>outline-(&amp;lt;custom-property&amp;gt;)</code></td><td><code>outline-width: var(&amp;lt;custom-property&amp;gt;);</code></td></tr><tr><td><code>outline-[&amp;lt;value&amp;gt;]</code></td><td><code>outline-width: &amp;lt;value&amp;gt;;</code></td></tr></tbody></table><p>Source: <a href="https://tailwindcss.com/guide/outline-width" target="_blank" rel="noreferrer">https://tailwindcss.com/guide/outline-width</a></p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><h3 id="basic-example" tabindex="-1">Basic example <a class="header-anchor" href="#basic-example" aria-label="Permalink to &quot;Basic example&quot;">​</a></h3><p>Use <code>outline</code> or <code>outline-&amp;lt;number&amp;gt;</code> utilities like <code>outline-2</code> and <code>outline-4</code> to set the outline width of an element:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;button class=&quot;outline outline-offset-2&quot;&gt;Button A&lt;/button&gt;</span></span>
<span class="line"><span>&lt;button class=&quot;outline-2 outline-offset-2&quot;&gt;Button B&lt;/button&gt;</span></span>
<span class="line"><span>&lt;button class=&quot;outline-4 outline-offset-2&quot;&gt;Button C&lt;/button&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="applying-on-focus" tabindex="-1">Applying on focus <a class="header-anchor" href="#applying-on-focus" aria-label="Permalink to &quot;Applying on focus&quot;">​</a></h3><p>Use the <code>focus:</code> prefix to conditionally apply an outline width on focus:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;button class=&quot;outline-offset-2 outline-sky-500 focus:outline-2&quot;&gt;</span></span>
<span class="line"><span>  Save Changes</span></span>
<span class="line"><span>&lt;/button&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="using-a-custom-value" tabindex="-1">Using a custom value <a class="header-anchor" href="#using-a-custom-value" aria-label="Permalink to &quot;Using a custom value&quot;">​</a></h3><p>Use the <code>outline-[&amp;lt;value&amp;gt;]</code> syntax to set the outline width based on a completely custom value:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;button class=&quot;outline-[2vw] outline-offset-2&quot;&gt;</span></span>
<span class="line"><span>  Custom</span></span>
<span class="line"><span>&lt;/button&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>For CSS variables, you can also use the <code>outline-(&amp;lt;custom-property&amp;gt;)</code> syntax:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;button class=&quot;outline-(--my-outline-width) outline-offset-2&quot;&gt;</span></span>
<span class="line"><span>  &lt;!-- ... --&gt;</span></span>
<span class="line"><span>&lt;/button&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>This is just a shorthand for <code>outline-[var(&amp;lt;custom-property&amp;gt;)]</code> that adds the <code>var()</code> function for you automatically.</p><h3 id="responsive-design" tabindex="-1">Responsive design <a class="header-anchor" href="#responsive-design" aria-label="Permalink to &quot;Responsive design&quot;">​</a></h3><p>Prefix an <code>outline-width</code> utility with a breakpoint variant like <code>md:</code> to only apply the utility at medium screen sizes and above:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;button class=&quot;outline md:outline-2&quot;&gt;</span></span>
<span class="line"><span>  &lt;!-- ... --&gt;</span></span>
<span class="line"><span>&lt;/button&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Learn more about using variants in the variants documentation.</p>`,22)])])}const b=t(i,[["render",o]]);export{h as __pageData,b as default};
