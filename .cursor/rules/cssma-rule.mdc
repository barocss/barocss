---
description: CSS/Tailwind to Figma Conversion Rules and Design System Guide
globs: ["**/*.{ts,tsx,js,jsx,css}"]
---

# cssma-v4 변환 규칙 및 스타일 시스템 가이드

## 1. 핵심 원칙

- Tailwind CSS 변환은 AST 기반 엔진/파서/런타임 체계로 일관성 있게 처리
- 모든 변환 규칙/매핑은 명확한 타입/테스트/문서화로 검증
- variant/wrap/selector synthesis 등 v4 엔진 구조를 따른다

## 2. 주요 API 및 엔진 구조

- `processCssStyles(classNames: string): StyleObject`  
  Tailwind CSS → 스타일 변환 (AST 기반)
- `parseClassToAst(className: string): AstNode[]`  
  클래스명 → AST 변환 (variant/wrap/selector synthesis 포함)
- `optimizeAst(ast: AstNode[]): AstNode[]`  
  AST 최적화 (decl-only wrapping 등)
- `astToCss(ast: AstNode[]): string`  
  AST → CSS 문자열 변환 (minify/pretty-print 지원)
- `StyleRuntime`  
  런타임 CSS 인젝션, MutationObserver, scan 옵션 등 지원

## 3. 변환 규칙(매핑) 예시

- `flex-col` → `display: flex; flex-direction: column;`
- `w-full` → `width: 100%`
- `bg-[#FF0000]` → `background-color: #FF0000;`
- `text-lg` → `font-size: 18px;`
- `rounded-lg` → `border-radius: 8px;`
- `border-[#FF0000]` → `border-color: #FF0000;`
- `transition-all duration-300` → transition 속성 매핑

## 4. AST/Variant/Selector Synthesis 규칙

- variant(wrap)는 metadata(예: `{ type: 'rule', selector: ':hover' }`)로 처리, 중첩/카르테시안 곱 지원
- decl-only는 항상 `rule('&', nodes)`로 감싸 AST 일관성 유지
- selector synthesis는 sourcePriority에 따라 그룹/정렬/합성
- 런타임은 중복/캐싱/MutationObserver/scan 옵션 등 지원

## 5. 마이그레이션/제약/테스트/문서화

- v3→v4 마이그레이션:  
  - order 옵션 제거, wrap/metadata 기반 variant 구조로 변경
  - 함수명/엔진 구조/런타임/테스트/문서화 모두 v4 기준으로 일원화
- 제약:  
  - 일부 Tailwind 속성은 완전 매핑 불가, 복잡한 responsive/interaction은 제한적
- 테스트:  
  - 90%+ 커버리지, edge case/variant/selector synthesis/런타임/MutationObserver 등 포함
- 문서화:  
  - 모든 규칙/매핑/한계/예제/마이그레이션/테스트 기준 명확히 기술

## 6. 실전 예제

```typescript
// Tailwind → 스타일 객체
const styles = processCssStyles('flex-col w-full bg-[#FF0000] rounded-lg');
// styles: { display: 'flex', flexDirection: 'column', width: '100%', backgroundColor: '#FF0000', borderRadius: 8 }
```

## 7. 베스트 프랙티스

- 일관된 네이밍/토큰/프리셋 사용
- 변환 규칙/매핑/테스트/문서화 동기화
- 성능/호환성/접근성/유지보수성 고려

---

**이 문서는 cssma-v4 단일 패키지 기준의 공식 변환 규칙/스타일 시스템/엔진/파서/런타임/테스트/문서화/마이그레이션 가이드입니다.  
구체적 매핑/테스트/문서화/마이그레이션 등은 각 코드/문서/테스트를 참고하세요.**

- [Tailwind CSS Official Documentation](mdc:https:/tailwindcss.com/docs)
- [Figma API Reference](mdc:https:/www.figma.com/developers/api)
- [Figma Plugin Development Guide](mdc:https:/www.figma.com/plugin-docs)
- [cssma GitHub Repository](mdc:https:/github.com/figmaikr/cssma)