import{_ as e,c as t,o as s,a2 as n}from"./chunks/framework.C0Fyqt99.js";const b=JSON.parse('{"title":"opacity","description":"","frontmatter":{},"headers":[],"relativePath":"guide/effects/opacity.md","filePath":"guide/effects/opacity.md"}'),i={name:"guide/effects/opacity.md"};function p(o,a,l,c,d,r){return s(),t("div",null,[...a[0]||(a[0]=[n(`<h1 id="opacity" tabindex="-1">opacity <a class="header-anchor" href="#opacity" aria-label="Permalink to &quot;opacity&quot;">​</a></h1><p>Utilities for controlling the opacity of an element.</p><h2 id="quick-reference" tabindex="-1">Quick reference <a class="header-anchor" href="#quick-reference" aria-label="Permalink to &quot;Quick reference&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Class</th><th>Styles</th></tr></thead><tbody><tr><td><code>opacity-&amp;lt;number&amp;gt;</code></td><td><code>opacity: &amp;lt;number&amp;gt;%;</code></td></tr><tr><td><code>opacity-(&amp;lt;custom-property&amp;gt;)</code></td><td><code>opacity: var(&amp;lt;custom-property&amp;gt;);</code></td></tr><tr><td><code>opacity-[&amp;lt;value&amp;gt;]</code></td><td><code>opacity: &amp;lt;value&amp;gt;;</code></td></tr></tbody></table><p>Source: <a href="https://tailwindcss.com/guide/opacity" target="_blank" rel="noreferrer">https://tailwindcss.com/guide/opacity</a></p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><h3 id="basic-example" tabindex="-1">Basic example <a class="header-anchor" href="#basic-example" aria-label="Permalink to &quot;Basic example&quot;">​</a></h3><p>Use <code>opacity-&amp;lt;number&amp;gt;</code> utilities like <code>opacity-25</code> and <code>opacity-100</code> to set the opacity of an element:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;button class=&quot;bg-indigo-500 opacity-100 ...&quot;&gt;&lt;/button&gt;</span></span>
<span class="line"><span>&lt;button class=&quot;bg-indigo-500 opacity-75 ...&quot;&gt;&lt;/button&gt;</span></span>
<span class="line"><span>&lt;button class=&quot;bg-indigo-500 opacity-50 ...&quot;&gt;&lt;/button&gt;</span></span>
<span class="line"><span>&lt;button class=&quot;bg-indigo-500 opacity-25 ...&quot;&gt;&lt;/button&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="applying-conditionally" tabindex="-1">Applying conditionally <a class="header-anchor" href="#applying-conditionally" aria-label="Permalink to &quot;Applying conditionally&quot;">​</a></h3><p>Use the <code>disabled:</code> prefix to conditionally apply an opacity on disabled elements:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;input type=&quot;text&quot; class=&quot;opacity-100 disabled:opacity-75&quot; /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="using-a-custom-value" tabindex="-1">Using a custom value <a class="header-anchor" href="#using-a-custom-value" aria-label="Permalink to &quot;Using a custom value&quot;">​</a></h3><p>Use the <code>opacity-[&amp;lt;value&amp;gt;]</code> syntax to set the opacity based on a completely custom value:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;button class=&quot;opacity-[.67]&quot;&gt;</span></span>
<span class="line"><span>  Custom</span></span>
<span class="line"><span>&lt;/button&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>For CSS variables, you can also use the <code>opacity-(&amp;lt;custom-property&amp;gt;)</code> syntax:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;button class=&quot;opacity-(--my-opacity)&quot;&gt;</span></span>
<span class="line"><span>  &lt;!-- ... --&gt;</span></span>
<span class="line"><span>&lt;/button&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>This is just a shorthand for <code>opacity-[var(&amp;lt;custom-property&amp;gt;)]</code> that adds the <code>var()</code> function for you automatically.</p><h3 id="responsive-design" tabindex="-1">Responsive design <a class="header-anchor" href="#responsive-design" aria-label="Permalink to &quot;Responsive design&quot;">​</a></h3><p>Prefix an <code>opacity</code> utility with a breakpoint variant like <code>md:</code> to only apply the utility at medium screen sizes and above:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;button class=&quot;opacity-50 md:opacity-100&quot;&gt;</span></span>
<span class="line"><span>  &lt;!-- ... --&gt;</span></span>
<span class="line"><span>&lt;/button&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Learn more about using variants in the variants documentation.</p>`,22)])])}const m=e(i,[["render",p]]);export{b as __pageData,m as default};
